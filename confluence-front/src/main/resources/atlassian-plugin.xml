<?xml version="1.0" encoding="UTF-8"?>

<atlassian-plugin key="${project.groupId}.${project.artifactId}"
	name="${project.name}" plugins-version="2">
	<plugin-info>
		<description>${project.description}</description>
		<version>${project.version}</version>
		<vendor name="${project.organization.name}" url="${project.organization.url}" />
		<param name="plugin-icon">images/pluginIcon.png</param>
		<param name="plugin-logo">images/pluginLogo.png</param>
        <param name="configure.url">/admin/plugins/autodoc/config.action</param>
	</plugin-info>
	<!-- add our i18n resource -->
	<resource type="i18n" name="i18n" location="autodoc_confluence" />
	<!-- add our web resources -->
	<web-resource key="autodoc_confluence-resources" name="autodoc_confluence Web Resources">
		<!--<dependency>com.atlassian.auiplugin:ajs</dependency>-->
        <!--<dependency>com.atlassian.auiplugin:aui-select</dependency>-->
		<resource type="download" name="images/" location="/images" />
        <resource type="download" name="configureScreen.js" location="/js/configureScreen.js" />
		<resource type="download" name="autodoc-style.css" location="/css/autodoc-style.css" />

		<context>autodoc_confluence</context>
	</web-resource>

	<web-resource key="soy-templates">
		<dependency>com.atlassian.soy.soy-template-plugin:soy-deps</dependency>

		<!-- Available to the server-side only -->
        <resource type="soy" name="configureScreen" location="/templates/configureScreen.soy" />
		<!-- Make available to the client-side in JS as well... -->
		<transformation extension="soy">
			<transformer key="soyTransformer" />
		</transformation>
        <resource type="download" name="configureScreen.soy.js" location="/templates/configureScreen.soy" />
		<context>autodoc_confluence</context>
	</web-resource>

	<!-- imports -->
	<component-import key="applicationProperties"
		interface="com.atlassian.sal.api.ApplicationProperties" />
	<component-import key="pluginSettingsFactory"
		interface="com.atlassian.sal.api.pluginsettings.PluginSettingsFactory" />
	<component-import key="applicationLinkService"
		interface="com.atlassian.applinks.api.ApplicationLinkService" />
	<component-import key="soyTemplateRenderer"
		interface="com.atlassian.soy.renderer.SoyTemplateRenderer" />

	<!-- Link to the serverConfig screen -->
	<!--<web-item name="Autodoc" i18n-name-key="autodoc-configuration-link.name"-->
		<!--key="autodoc-configuration-link" section="system.space.tools/addons"-->
		<!--weight="1000">-->
		<!--<description key="autodoc-configuration-link.description">The Autodoc Configuration Link Plugin-->
		<!--</description>-->
		<!--<label key="autodoc-configuration-link.label" />-->
		<!--<link linkId="autodoc-configuration-link-id">/plugins/servlet/${project.artifactId}/configure-autodoc?key=$generalUtil.urlEncode($helper.spaceKey)-->
		<!--</link>-->
		<!--<condition-->
			<!--class="com.atlassian.confluence.plugin.descriptor.web.conditions.SpacePermissionCondition">-->
			<!--<param name="permission">administer</param>-->
		<!--</condition>-->
	<!--</web-item>-->

    <!--<servlet name="Autodoc Configure Screen" key="autodocConf" class="com.networkedassets.autodoc.configureGui.ConfigureServlet">-->
        <!--<url-pattern>/${project.artifactId}/configure-autodoc</url-pattern>-->
    <!--</servlet>-->

	<component-import key="ao" name="Active Objects service" interface="com.atlassian.activeobjects.external.ActiveObjects">
		<description>Component to access Active Objects functionality from the plugin</description>
	</component-import>

	<ao key="ao-module">
		<description>The AO module for this plugin.</description>
		<entity>com.networkedassets.autodoc.documentation.Documentation</entity>
		<entity>com.networkedassets.autodoc.documentation.DocumentationPiece</entity>
	</ao>

	<rest key="autodocRest" path="/autodoc" version="1.0">
		<description>Provides rest endpoints used by Autodoc</description>
	</rest>
	
	<xhtml-macro name="autodocDashboard" class="com.networkedassets.autodoc.presentationMacro.AutodocDashboard"
		   key="autodocDashboard">
		<description>Macro element containing the Autodoc Dashboard</description>
        <parameters>
			<parameter name="source" type="string" required="false"/>
            <parameter name="project" type="string" required="false"/>
            <parameter name="sourceProject" type="enum" required="true">
                <value name="Loading..."/>
            </parameter>
            <parameter name="repo" type="enum" required="true">
				<value name="Loading..."/>
                <option key="hidden" value="true" />
			</parameter>
            <parameter name="branch" type="enum" required="true">
				<value name="Loading..."/>
			</parameter>
            <parameter name="javadoc" type="boolean" />
            <parameter name="classDiagram" type="boolean" />
        </parameters>
	</xhtml-macro>

    <web-resource key="autodoc-macro-params" name="autodoc macro parameter autocompletion">
        <resource type="download" name="autodocMacroParams.js" location="js/autodocMacroParams.js" />
        <dependency>confluence.editor.actions:editor-macro-browser</dependency>
        <context>macro-browser</context>
    </web-resource>

	<web-resource key="dashboard-resources" name="Dashboard web resources">
		<resource type="download" name="dashboardResources/" location="/dashboardResources" />
		<resource type="download" name="js/lib/d3.min.js" location = "dashboardResources/js/lib/d3.min.js" />
		<resource type="download" name="js/lib/dagre.min.js" location = "dashboardResources/js/lib/dagre.min.js" />
		<resource type="download" name="js/lib/dagre-d3.min.js" location = "dashboardResources/js/lib/dagre-d3.min.js" />
		<resource type="download" name="js/lib/angular.min.js" location = "dashboardResources/js/lib/angular.min.js" />
		<resource type="download" name="js/lib/angular-sanitize.min.js" location = "dashboardResources/js/lib/angular-sanitize.min.js" />
		<resource type="download" name="js/lib/angular-ui-router.min.js" location = "dashboardResources/js/lib/angular-ui-router.min.js" />

		<resource type="download" name="js/app.js" location = "dashboardResources/js/app.js" />
		<resource type="download" name="js/config.js" location = "dashboardResources/js/config.js" />

		<resource type="download" name="css/doc_javadoc.css" location = "dashboardResources/css/doc_javadoc.css" />
		<resource type="download" name="css/doc_javadoc.entity.css" location = "dashboardResources/css/doc_javadoc.entity.css" />
		<resource type="download" name="css/doc_classDiagram.css" location = "dashboardResources/css/doc_classDiagram.css" />
		<resource type="download" name="css/doc_main.css" location = "dashboardResources/css/doc_main.css" />

		<resource type="download" name="js/ctrl/javadoc.entity.js" location = "dashboardResources/js/ctrl/javadoc.entity.js" />
		<resource type="download" name="js/ctrl/javadoc.js" location = "dashboardResources/js/ctrl/javadoc.js" />
		<resource type="download" name="js/ctrl/classDiagram.js" location = "dashboardResources/js/ctrl/classDiagram.js" />
		<resource type="download" name="js/ctrl/top.js" location = "dashboardResources/js/ctrl/top.js" />

		<resource type="download" name="js/doc_classDiagram.js" location = "dashboardResources/js/doc_classDiagram.js" />

		<resource type="download" name="js/dirs/docQname.js" location = "dashboardResources/js/dirs/docQname.js" />

		<resource type="download" name="js/services/urlProvider.js" location = "dashboardResources/js/services/urlProvider.js" />
		<resource type="download" name="js/services/javadocEntities.js" location = "dashboardResources/js/services/javadocEntities.js" />

		<resource type="download" name="js/filters/javadoc.menuItemSorter.js" location = "dashboardResources/js/filters/javadoc.menuItemSorter.js" />

		<resource type="download" name="js/fn/common.js" location="dashboardResources/js/fn/common.js" />

		<resource type="download" name="images/" location="dashboardResources/images/"/>
	</web-resource>

	<web-resource key="configuration-resources" name="Configuration web resources">
		<resource type="download" name="configurationResources/" location="/configurationResources" />


		<resource type="download" name="css/doc_config.css" location = "configurationResources/css/doc_config.css" />

		<resource type="download" name="js/lib/angular.min.js" location = "configurationResources/js/lib/angular.min.js" />

		<resource type="download" name="js/app.js" location = "configurationResources/js/app.js" />

		<resource type="download" name="js/services/settingsData.js" location = "configurationResources/js/services/settingsData.js" />
		<resource type="download" name="js/services/urlProvider.js" location = "configurationResources/js/services/urlProvider.js" />

		<resource type="download" name="js/ctrl/branchSettings.js" location = "configurationResources/js/ctrl/branchSettings.js" />
		<resource type="download" name="js/ctrl/components.js" location = "configurationResources/js/ctrl/components.js" />
		<resource type="download" name="js/ctrl/menu.js" location = "configurationResources/js/ctrl/menu.js" />
		<resource type="download" name="js/ctrl/schedules.js" location = "configurationResources/js/ctrl/schedules.js" />
		<resource type="download" name="js/ctrl/sources.js" location = "configurationResources/js/ctrl/sources.js" />

		<resource type="download" name="js/dirs/auiSelect2.js" location = "configurationResources/js/dirs/auiSelect2.js" />
		<resource type="download" name="js/dirs/docAuiButtonGroup.js" location = "configurationResources/js/dirs/docAuiButtonGroup.js" />
		<resource type="download" name="js/dirs/docAuiDatePicker.js" location = "configurationResources/js/dirs/docAuiDatePicker.js" />

		<resource type="download" name="data/settings3.json" location = "configurationResources/data/settings3.json" />

	</web-resource>

    <xwork key="autodoc-configure-action" name="autodoc configure actions">
        <package extends="default" name="autodoc-configure-action" namespace="/admin/plugins/autodoc">
            <default-interceptor-ref name="defaultStack"/>
            <action class="com.networkedassets.autodoc.configureGui.ConfigureAction" method="load" name="config">
                <result name="error" type="velocity">/configurationResources/configuration.vm</result>
                <result name="success" type="velocity">/configurationResources/configuration.vm</result>
            </action>
            <action class="com.networkedassets.autodoc.configureGui.ConfigureAction" method="save" name="save">
                <interceptor-ref name="validatingStack"/>
                <result name="error" type="velocity">/configurationResources/configuration.vm</result>
                <result name="success" type="redirect">/admin/plugins/autodoc/config.action</result>
            </action>
        </package>
    </xwork>

</atlassian-plugin>
